type UserProfile
@model(timestamps:{createdAt: "createdOn", updatedAt: "updatedOn"})
@auth(rules: [{ allow: owner }])
{
  id: ID!,
  name: String,
  gender: String,
  activityLevel: String,
  occupationActivity: String,
  weeklyGoal: String,
  bodyType: String,
  dietryRequirments: [String],
  height: Float,
  mesureSystem: String,
  firstMealTime: AWSTime,
  weightHistory: [WeightHistory],
  bmiHistory: [BMIHistory],
  favouriteFood: [FavouriteFood]
}

type WeightHistory {
  weight: Float!,
  dateTime: AWSDateTime!
}

type BMIHistory {
  bmi: Float!,
  dateTime: AWSDateTime!
}

type FavouriteFood {
  id: ID!,
  name: String!,
  source: String!,
  imageURL: AWSURL,
  healthLabel: String,
}
type ActivityLevel
@model
@auth(rules: [
    { allow: owner },
    { allow: public, operations: [read] }])
@key(name: "orderBy", fields: ["listOrder"]) 
{
  id: ID!,
  description: String!,
  listOrder: Int!
}

type OccupationActivity
@model
@auth(rules: [
    { allow: owner },
    { allow: public, operations: [read] }])
@key(name: "orderBy", fields: ["listOrder"]) 
{
  id: ID!,
  description: String!,
  listOrder: Int!
}

type DietaryRequirement
@model
@auth(rules: [
    { allow: owner },
    { allow: public, operations: [read] }])
@key(name: "orderBy", fields: ["listOrder"]) 
{
  id: ID!,
  description: String!,
  listOrder: Int!
}